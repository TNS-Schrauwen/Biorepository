#!/bin/bash -l
#SBATCH --mail-type=ALL
#SBATCH --mem=10000
#SBATCH -t 96:00:00
#SBATCH -J Part_1b___Out
#SBATCH -o Part_1b___Out-%j.out
#SBATCH -e Part_1b___Out-%j.err
#SBATCH --chdir=.
#SBATCH --mail-user=yourUser@yourDOMAIN.edu
#SBATCH -p QUEUE



# Export Your Miniconda Path



# Module load
module load BCFTOOLS/Version1.18
module load HTSLIB/Version1.18
module load VCFTOOLS/Version0.1.17



# Define variables
## Path to the TSV file (Step 08 Fitration Type Part 1 TSV)
TSV_FILE="/path/to/Step_08___VariantEffectPredictor___VEP/PreFiltration_Type/Part_0___PreProcessing/File.tsv"
## Output directory
OUTPUT_DIRECTORY="/path/to/Step_08___VariantEffectPredictor___VEP/PreFiltration_Type/Part_1___TSV_To_VCF_Format"



## Output file basename
BASE_NAME="Part_1___Output___TSV_To_VCF___YourDescriptor___PreFiltration_Type___"



## Path to the reference fasta
REFERENCE_FASTA="/path/to/your/reference/reference.fa"



# Get the current timestamp:
start_timestamp=$(date "+%Y-%m-%d %H:%M:%S")

# Print the timestamp to stdout:
echo -e "\n\n**Job Started At:** $start_timestamp\n\n"



# Check if the TSV file exists
if [ -f "$TSV_FILE" ]; then
    # If the file exists, print the path
    echo "*TSV File:* $TSV_FILE"
else
    # If the file does not exist, print a message and exit
    echo "TSV file does not exist. Exiting . . ."
    exit 1
fi



# Check if the FASTA file exists
if [ -f "$REFERENCE_FASTA" ]; then
    # If the file exists, print the path
    echo "*Reference FASTA:* $REFERENCE_FASTA"
else
    # If the file does not exist, print a message and exit
    echo "Reference FASTA file does not exist. Exiting . . ."
    exit 1
fi



# Check if the string has one or more characters
if [[ -n "$BASE_NAME" ]]; then
    # If the string has one or more characters, print it
    echo "*Base Name Of Output File:* $BASE_NAME"
else
    # If the string does not have one or more characters, print a message and exit
    echo "Base name is empty. Exiting . . ."
    exit 1
fi



# Use cut to extract the first 5 columns and replace #CHROM with CHROM
cut -f 1-5 "$TSV_FILE" | sed 's/#CHROM/CHROM/' > "$OUTPUT_DIRECTORY/extracted_columns_with_quotes.tsv"

# Remove quotes
sed 's/"//g' "$OUTPUT_DIRECTORY/extracted_columns_with_quotes.tsv" > "$OUTPUT_DIRECTORY/extracted_columns.tsv"



# Execute bcftools convert
bcftools convert \
    --tsv2vcf "$OUTPUT_DIRECTORY/extracted_columns.tsv" \
    -c "CHROM,POS,ID,REF,ALT" \
    -f "$REFERENCE_FASTA" \
    -o "$OUTPUT_DIRECTORY/$BASE_NAME.vcf"



# Sort vcf
vcf-sort "$OUTPUT_DIRECTORY/$BASE_NAME.vcf" > "$OUTPUT_DIRECTORY/$BASE_NAME.sorted.vcf"

# Use bgzip to compress the sorted VCF file
bgzip -c "$OUTPUT_DIRECTORY/$BASE_NAME.sorted.vcf" > "$OUTPUT_DIRECTORY/$BASE_NAME.sorted.vcf.gz"



# Index the compressed VCF
tabix -p vcf "$OUTPUT_DIRECTORY/$BASE_NAME.sorted.vcf.gz"



# Get the timestamp when the command completes:
end_timestamp=$(date "+%Y-%m-%d %H:%M:%S")

# Print the end timestamp to stdout:
echo -e "\n**Job Ended At:** $end_timestamp\n"


