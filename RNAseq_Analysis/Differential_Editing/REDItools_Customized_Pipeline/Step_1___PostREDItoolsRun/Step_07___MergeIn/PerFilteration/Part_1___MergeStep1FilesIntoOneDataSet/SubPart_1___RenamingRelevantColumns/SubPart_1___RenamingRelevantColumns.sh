#!/bin/bash
#$ -l h_rt=96:00:00
#$ -l h_vmem=10G
#$ -N SubPart_1___RenamingRelevantColumnsOut
#$ -o /path/to/SubPart_1___RenamingRelevantColumnsOut-$JOB_ID.out
#$ -e /path/to/SubPart_1___RenamingRelevantColumnsOut-$JOB_ID.err
#$ -j y
#$ -q queue



# Export Miniconda Path



# Get the current timestamp:
start_timestamp=$(date "+%Y-%m-%d %H:%M:%S")

# Print the timestamp to stdout:
echo -e "\n\n**Job Started At:** $start_timestamp\n"



## Set input and output directories

### Path to Step 1 Directory Where K contigs and mitochondrial Regions are removed
input_directory="/path/to/Step_01___Removal_Of_K_And_Mitochondrial_Regions"
### Path to the Step 7 Part 2 Merging In 3 Columns Part 1 Renaming Step 0 Columns
output_directory="/path/to/Step_07___MergeIn/Basic_PreFiltration/SubPart_1___RenamingRelevantColumns"



# Check if input_directory exists
if [ -d "$input_directory" ]; then
    echo "*Input Directory:* $input_directory"

    # Check if output_directory exists
    if [ -d "$output_directory" ]; then
        echo -e "*Output Directory:* $output_directory\n\n"

    else
        echo "Output directory does not exist. Exiting . . ."
        exit 1  # Exit the script with an error status
    fi

else
    echo "Input directory does not exist. Exiting . . ."
    exit 1  # Exit the script with an error status
fi



# Iterate over each .tsv file in the input directory
for file in "$input_directory"/*.tsv; do
    # Extract filename without extension and prefix
    filename=$(basename -- "$file")
    filename_noext="${filename%.*}"
    prefix=$(echo "$filename_noext" | cut -d'_' -f1)

    # Process each file using AWK
    awk -v prefix="$prefix" -F'\t' 'BEGIN {OFS="\t"} 
        NR==1 {print "Region", "Position", "Reference_"prefix, "BaseCount[A,C,G,T]_"prefix, "AllSubs_"prefix; next} 
        {print $1, $2, $3, $7, $8}' "$file" > "$output_directory"/"$filename_noext"_processed.tsv

    # Print a message indicating the file has been processed
    echo "*Processed:* $file"
done



# Memory Used:
echo -e "\n*Let's look at the vmem:*\n"
qstat -j $JOB_ID | grep vmem 



# Get the timestamp when the command completes:
end_timestamp=$(date "+%Y-%m-%d %H:%M:%S")

# Print the end timestamp to stdout:
echo -e "\n**Job Ended At:** $end_timestamp\n"

